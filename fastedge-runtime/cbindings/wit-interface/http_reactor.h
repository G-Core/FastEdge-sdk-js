// Generated by `wit-bindgen` 0.9.0. DO NOT EDIT!
#ifndef __BINDINGS_HTTP_REACTOR_H
#define __BINDINGS_HTTP_REACTOR_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <stdbool.h>

typedef struct {
  char*ptr;
  size_t len;
} http_reactor_string_t;

typedef uint16_t gcore_fastedge_http_http_status_t;

typedef struct {
  uint8_t *ptr;
  size_t len;
} gcore_fastedge_http_body_t;

typedef struct {
  http_reactor_string_t f0;
  http_reactor_string_t f1;
} http_reactor_tuple2_string_string_t;

typedef struct {
  http_reactor_tuple2_string_string_t *ptr;
  size_t len;
} gcore_fastedge_http_headers_t;

typedef http_reactor_string_t gcore_fastedge_http_uri_t;

typedef uint8_t gcore_fastedge_http_method_t;

#define GCORE_FASTEDGE_HTTP_METHOD_GET 0
#define GCORE_FASTEDGE_HTTP_METHOD_POST 1
#define GCORE_FASTEDGE_HTTP_METHOD_PUT 2
#define GCORE_FASTEDGE_HTTP_METHOD_DELETE 3
#define GCORE_FASTEDGE_HTTP_METHOD_HEAD 4
#define GCORE_FASTEDGE_HTTP_METHOD_PATCH 5
#define GCORE_FASTEDGE_HTTP_METHOD_OPTIONS 6

typedef struct {
  bool is_some;
  gcore_fastedge_http_body_t val;
} http_reactor_option_gcore_fastedge_http_body_t;

typedef struct {
  gcore_fastedge_http_method_t method;
  gcore_fastedge_http_uri_t uri;
  gcore_fastedge_http_headers_t headers;
  http_reactor_option_gcore_fastedge_http_body_t body;
} gcore_fastedge_http_request_t;

typedef struct {
  bool is_some;
  gcore_fastedge_http_headers_t val;
} http_reactor_option_gcore_fastedge_http_headers_t;

typedef struct {
  gcore_fastedge_http_http_status_t status;
  http_reactor_option_gcore_fastedge_http_headers_t headers;
  http_reactor_option_gcore_fastedge_http_body_t body;
} gcore_fastedge_http_response_t;

typedef uint8_t gcore_fastedge_http_error_t;

#define GCORE_FASTEDGE_HTTP_ERROR_SUCCESS 0
#define GCORE_FASTEDGE_HTTP_ERROR_DESTINATION_NOT_ALLOWED 1
#define GCORE_FASTEDGE_HTTP_ERROR_INVALID_URL 2
#define GCORE_FASTEDGE_HTTP_ERROR_REQUEST_ERROR 3
#define GCORE_FASTEDGE_HTTP_ERROR_RUNTIME_ERROR 4
#define GCORE_FASTEDGE_HTTP_ERROR_TOO_MANY_REQUESTS 5

typedef gcore_fastedge_http_request_t gcore_fastedge_http_client_request_t;

typedef gcore_fastedge_http_response_t gcore_fastedge_http_client_response_t;

typedef gcore_fastedge_http_error_t gcore_fastedge_http_client_error_t;

typedef gcore_fastedge_http_request_t gcore_fastedge_http_handler_request_t;

typedef gcore_fastedge_http_response_t gcore_fastedge_http_handler_response_t;

// Imported Functions from `gcore:fastedge/http-client`
bool gcore_fastedge_http_client_send_request(gcore_fastedge_http_client_request_t *req, gcore_fastedge_http_client_response_t *ret, gcore_fastedge_http_client_error_t *err);

// Exported Functions from `gcore:fastedge/http-handler`
void exports_gcore_fastedge_http_handler_process(gcore_fastedge_http_handler_request_t *req, gcore_fastedge_http_handler_response_t *ret);

#ifdef __cplusplus
}
#endif
#endif
