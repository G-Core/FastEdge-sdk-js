import { writeFileSync } from 'node:fs';
import path from 'node:path';

import { createManifestFileMap, prettierObjectString } from './create-manifest.ts';

import type { BuildConfig } from '~fastedge-build/config-build/index.ts';

import { createOutputDirectory } from '~utils/file-system.ts';
import { colorLog } from '~utils/prompts.ts';

/**
 * Creates a static manifest file based on the provided configuration.
 * @param config - The configuration for creating the static manifest.
 */
async function createStaticManifest(config: BuildConfig): Promise<void> {
  const outputFile = '.fastedge/build/static-server-manifest.js';
  const manifestBuildOutput = path.resolve(outputFile);

  await createOutputDirectory(manifestBuildOutput);

  colorLog('info', `Creating build manifest in ${manifestBuildOutput}`);

  const staticAssetManifest = await createManifestFileMap(config);

  const readableAssetLines = Object.entries(staticAssetManifest).map(
    ([key, value]) => `  '${key}': ${prettierObjectString(value)},`,
  );

  const manifestFileContents = [
    '/*',
    ' * DO NOT EDIT THIS FILE - Generated by @gcoredev/FastEdge-sdk-js',
    ' *',
    ' * It will be overwritten on the next build.',
    ' */',
    '',
    'const staticAssetManifest = {',
    ...readableAssetLines,
    '};',
    '',
    'export { staticAssetManifest };',
    '',
  ];

  writeFileSync(manifestBuildOutput, manifestFileContents.join('\n'));
}

export { createStaticManifest };
