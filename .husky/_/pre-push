#!/bin/bash

# Called by "git push" after it has checked the remote status,
# but before anything has been pushed.
#
# If this script exits with a non-zero status nothing will be pushed.
#
# Try a push to main, you should get a message `*** [Policy] Never push code directly to...`
#
# The commands below will not be allowed...
# `git push origin main`
# `git push --force origin main`
# `git push --delete origin main`


protected_branches='^(main|next|next-major|beta|alpha)$'  # Add the names of the branches you want to protect here

policy="[Policy] (Prevented with pre-push hook.) ðŸš«\n Never push code directly to the protected branches!"

current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

push_command=$(ps -ocommand= -p $PPID)

do_exit(){
  echo -e $policy
  exit 1
}

# Prevent ALL pushes to protected_branches
if [[ $push_command =~ $protected_branches ]] || [[ $current_branch =~ $protected_branches ]]; then
  do_exit
fi

unset do_exit

exit 0
